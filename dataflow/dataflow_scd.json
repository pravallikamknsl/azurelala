{
	"name": "dataflow_scd",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Customersource",
						"type": "DatasetReference"
					},
					"name": "customerSource"
				},
				{
					"dataset": {
						"referenceName": "Dimcustomer",
						"type": "DatasetReference"
					},
					"name": "Dimcustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Dimcustomer",
						"type": "DatasetReference"
					},
					"name": "sinkTarget"
				}
			],
			"transformations": [
				{
					"name": "Createhashkey"
				},
				{
					"name": "exist"
				},
				{
					"name": "lookupCustomerId"
				},
				{
					"name": "setdates"
				},
				{
					"name": "Upset"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> customerSource",
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          HashKey as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Dimcustomer",
				"customerSource derive(HashKey = sha2(256, iifNull(Title,'') +iifNull(FirstName, '') +iifNull(MiddleName,'') +iifNull(LastName, '') +iifNull(Suffix,'') +iifNull(CompanyName,'') +iifNull(SalesPerson,'') +iifNull(EmailAddress,'') +iifNull(Phone,''))) ~> Createhashkey",
				"Createhashkey, Dimcustomer exists(Createhashkey@HashKey == Dimcustomer@HashKey,",
				"     negate:true,",
				"     broadcast: 'auto')~> exist",
				"exist, Dimcustomer lookup(customerSource@CustomerID == Dimcustomer@CustomerID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCustomerId",
				"lookupCustomerId derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(), InsertedDate),",
				"          ModifiedDate = currentTimestamp()) ~> setdates",
				"setdates alterRow(upsertIf(true())) ~> Upset",
				"Upset sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CustomerID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID = customerSource@CustomerID,",
				"          Title = customerSource@Title,",
				"          FirstName = customerSource@FirstName,",
				"          MiddleName = customerSource@MiddleName,",
				"          LastName = customerSource@LastName,",
				"          Suffix = customerSource@Suffix,",
				"          CompanyName = customerSource@CompanyName,",
				"          SalesPerson = customerSource@SalesPerson,",
				"          EmailAddress = customerSource@EmailAddress,",
				"          Phone = customerSource@Phone,",
				"          HashKey = Createhashkey@HashKey,",
				"          CustomerID = Dimcustomer@CustomerID,",
				"          Title = Dimcustomer@Title,",
				"          FirstName = Dimcustomer@FirstName,",
				"          MiddleName = Dimcustomer@MiddleName,",
				"          LastName = Dimcustomer@LastName,",
				"          Suffix = Dimcustomer@Suffix,",
				"          CompanyName = Dimcustomer@CompanyName,",
				"          SalesPerson = Dimcustomer@SalesPerson,",
				"          EmailAddress = Dimcustomer@EmailAddress,",
				"          Phone = Dimcustomer@Phone,",
				"          InsertedDate,",
				"          ModifiedDate,",
				"          HashKey = Dimcustomer@HashKey",
				"     )) ~> sinkTarget"
			]
		}
	}
}